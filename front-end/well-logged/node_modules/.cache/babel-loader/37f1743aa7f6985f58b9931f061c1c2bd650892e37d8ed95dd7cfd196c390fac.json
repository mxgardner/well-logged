{"ast":null,"code":"var _jsxFileName = \"/Users/mariahjadegardner/UTA/FA24/Research/HackGeo/blockhead/ui/front-end/well-logged/src/interactions/UploadFile.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst express = require('express');\nconst cors = require('cors');\nconst app = express();\napp.use(cors()); // This will enable CORS for all routes\n\napp.post('/plot-logs/', (req, res) => {\n  // Your file upload logic here\n  res.send('File uploaded successfully');\n});\napp.listen(8000, () => {\n  console.log('Server running on http://127.0.0.1:8000');\n});\nconst FileUpload = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const handleFileChange = event => {\n    setFile(event.target.files[0]);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const formData = new FormData();\n    formData.append('file', file);\n    const response = await fetch('http://127.0.0.1:8000/plot-logs/', {\n      // Correct URL\n      method: 'POST',\n      body: formData\n    });\n    if (response.ok) {\n      console.log('File uploaded successfully');\n    } else {\n      console.error('File upload failed');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(FileUpload, \"Nkb8eHkBruGouXteoqeZ1R6wRVk=\");\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","express","require","cors","app","use","post","req","res","send","listen","console","log","FileUpload","_s","file","setFile","handleFileChange","event","target","files","handleSubmit","preventDefault","formData","FormData","append","response","fetch","method","body","ok","error","onSubmit","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mariahjadegardner/UTA/FA24/Research/HackGeo/blockhead/ui/front-end/well-logged/src/interactions/UploadFile.jsx"],"sourcesContent":["import React, { useState } from 'react';\nconst express = require('express');\nconst cors = require('cors');\nconst app = express();\n\napp.use(cors()); // This will enable CORS for all routes\n\napp.post('/plot-logs/', (req, res) => {\n    // Your file upload logic here\n    res.send('File uploaded successfully');\n});\n\napp.listen(8000, () => {\n    console.log('Server running on http://127.0.0.1:8000');\n});\n\nconst FileUpload = () => {\n    const [file, setFile] = useState(null);\n\n    const handleFileChange = (event) => {\n        setFile(event.target.files[0]);\n    };\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        const formData = new FormData();\n        formData.append('file', file);\n\n        const response = await fetch('http://127.0.0.1:8000/plot-logs/', { // Correct URL\n            method: 'POST',\n            body: formData,\n        });        \n\n        if (response.ok) {\n            console.log('File uploaded successfully');\n        } else {\n            console.error('File upload failed');\n        }\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input type=\"file\" onChange={handleFileChange} />\n            <button type=\"submit\">Upload</button>\n        </form>\n    );\n};\n\nexport default FileUpload;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACxC,MAAMC,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAME,GAAG,GAAGH,OAAO,CAAC,CAAC;AAErBG,GAAG,CAACC,GAAG,CAACF,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;;AAEjBC,GAAG,CAACE,IAAI,CAAC,aAAa,EAAE,CAACC,GAAG,EAAEC,GAAG,KAAK;EAClC;EACAA,GAAG,CAACC,IAAI,CAAC,4BAA4B,CAAC;AAC1C,CAAC,CAAC;AAEFL,GAAG,CAACM,MAAM,CAAC,IAAI,EAAE,MAAM;EACnBC,OAAO,CAACC,GAAG,CAAC,yCAAyC,CAAC;AAC1D,CAAC,CAAC;AAEF,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAEtC,MAAMmB,gBAAgB,GAAIC,KAAK,IAAK;IAChCF,OAAO,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAClC,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOH,KAAK,IAAK;IAClCA,KAAK,CAACI,cAAc,CAAC,CAAC;IACtB,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEV,IAAI,CAAC;IAE7B,MAAMW,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,EAAE;MAAE;MAC/DC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEN;IACV,CAAC,CAAC;IAEF,IAAIG,QAAQ,CAACI,EAAE,EAAE;MACbnB,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;IAC7C,CAAC,MAAM;MACHD,OAAO,CAACoB,KAAK,CAAC,oBAAoB,CAAC;IACvC;EACJ,CAAC;EAED,oBACI/B,OAAA;IAAMgC,QAAQ,EAAEX,YAAa;IAAAY,QAAA,gBACzBjC,OAAA;MAAOkC,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAElB;IAAiB;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjDvC,OAAA;MAAQkC,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAM;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnC,CAAC;AAEf,CAAC;AAACzB,EAAA,CA9BID,UAAU;AAAA2B,EAAA,GAAV3B,UAAU;AAgChB,eAAeA,UAAU;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}