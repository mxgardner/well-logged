{"ast":null,"code":"var _jsxFileName = \"/Users/mariahjadegardner/UTA/FA24/Research/HackGeo/blockhead/ui/front-end/well-logged/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport { useState } from 'react';\nimport { PaperCanvas } from './components/PaperCanvas.jsx';\nimport { View } from './components/View.jsx';\nimport { CreateGridBG } from './interactions/CreateGridBG.jsx';\nimport { Menus } from './components/Menus.jsx';\nimport Draggable from 'react-draggable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst START_SCREEN = \"paper\";\nfunction App() {\n  _s();\n  const [appScreen, setScreen] = useState(START_SCREEN);\n  const [paperReady, setPaperReady] = useState(false);\n  const [file, setFile] = useState(null);\n  const [svgContent, setSvgContent] = useState(null); // State for SVG content\n  const [menus, setMenus] = useState([]); // Array to track all menus\n\n  // Function to add a new menu and position it in the center of the screen\n  const addNewMenu = () => {\n    const screenWidth = window.innerWidth;\n    const screenHeight = window.innerHeight;\n\n    // Calculate the center position of the screen\n    const centerX = screenWidth / 2 - 150; // Assuming menu width is 300px\n    const centerY = screenHeight / 2 - 150; // Assuming menu height is 300px\n\n    const newMenu = {\n      id: Date.now(),\n      position: {\n        x: centerX,\n        y: centerY\n      } // Set initial position to the center\n    };\n    setMenus([...menus, newMenu]);\n  };\n\n  // Function to remove a menu by its ID\n  const removeMenu = id => {\n    setMenus(menus.filter(menu => menu.id !== id));\n  };\n\n  // File upload handling logic from FileUpload component\n  const handleFileChange = event => {\n    setFile(event.target.files[0]);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const formData = new FormData();\n    formData.append('file', file);\n    const response = await fetch('http://127.0.0.1:8000/plot-logs/', {\n      method: 'POST',\n      body: formData\n    });\n    if (response.ok) {\n      console.log('File uploaded successfully');\n      const svg = await response.text();\n      setSvgContent(svg); // Set the SVG content to display in UI\n    } else {\n      console.error('File upload failed');\n      const errorText = await response.text();\n      console.error('Response Text:', errorText);\n    }\n  };\n  const handleOtherPlot = async event => {\n    event.preventDefault();\n    const formData = new FormData();\n    formData.append('file', file);\n    const response = await fetch('http://127.0.0.1:8000/plot-other-log/', {\n      method: 'POST',\n      body: formData\n    });\n    if (response.ok) {\n      console.log('File uploaded successfully');\n      const svg = await response.text();\n      setSvgContent(svg); // Set the SVG content to display in UI\n    } else {\n      console.error('File upload failed');\n      const errorText = await response.text();\n      console.error('Response Text:', errorText);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: appScreen === \"paper\" && /*#__PURE__*/_jsxDEV(View, {\n      icon: \"\",\n      goToScreen: \"\",\n      screen: appScreen,\n      setScreen: setScreen,\n      children: [/*#__PURE__*/_jsxDEV(PaperCanvas, {\n        setPaperReady: setPaperReady\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), paperReady && /*#__PURE__*/_jsxDEV(CreateGridBG, {\n        paper: paperReady,\n        paperReady: paperReady\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addNewMenu,\n        children: \"Add New Menu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), menus.map(menu => /*#__PURE__*/_jsxDEV(Draggable, {\n        defaultPosition: menu.position // Set initial position to the center\n        ,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"draggable-menu\",\n          style: {\n            position: 'absolute',\n            zIndex: 10,\n            backgroundColor: '#fff',\n            padding: '20px',\n            borderRadius: '8px',\n            boxShadow: '0 4px 8px rgba(0,0,0,0.2)'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Menus, {\n            handleFileChange: handleFileChange,\n            handleSubmit: handleSubmit,\n            handleOtherPlot: handleOtherPlot,\n            file: file,\n            svgContent: svgContent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => removeMenu(menu.id),\n            children: \"Close Menu\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 15\n        }, this)\n      }, menu.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"8ig2ECdPfphEXAEwMO99rUhe3pY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","PaperCanvas","View","CreateGridBG","Menus","Draggable","jsxDEV","_jsxDEV","START_SCREEN","App","_s","appScreen","setScreen","paperReady","setPaperReady","file","setFile","svgContent","setSvgContent","menus","setMenus","addNewMenu","screenWidth","window","innerWidth","screenHeight","innerHeight","centerX","centerY","newMenu","id","Date","now","position","x","y","removeMenu","filter","menu","handleFileChange","event","target","files","handleSubmit","preventDefault","formData","FormData","append","response","fetch","method","body","ok","console","log","svg","text","error","errorText","handleOtherPlot","className","children","icon","goToScreen","screen","fileName","_jsxFileName","lineNumber","columnNumber","paper","onClick","map","defaultPosition","style","zIndex","backgroundColor","padding","borderRadius","boxShadow","_c","$RefreshReg$"],"sources":["/Users/mariahjadegardner/UTA/FA24/Research/HackGeo/blockhead/ui/front-end/well-logged/src/App.js"],"sourcesContent":["import './App.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport { useState } from 'react';\nimport { PaperCanvas } from './components/PaperCanvas.jsx';\nimport { View } from './components/View.jsx';\nimport { CreateGridBG } from './interactions/CreateGridBG.jsx';\nimport { Menus } from './components/Menus.jsx';\nimport Draggable from 'react-draggable';\n\nconst START_SCREEN = \"paper\";\n\nfunction App() {\n  const [appScreen, setScreen] = useState(START_SCREEN);\n  const [paperReady, setPaperReady] = useState(false);\n  const [file, setFile] = useState(null);\n  const [svgContent, setSvgContent] = useState(null); // State for SVG content\n  const [menus, setMenus] = useState([]); // Array to track all menus\n\n  // Function to add a new menu and position it in the center of the screen\n  const addNewMenu = () => {\n    const screenWidth = window.innerWidth;\n    const screenHeight = window.innerHeight;\n\n    // Calculate the center position of the screen\n    const centerX = screenWidth / 2 - 150; // Assuming menu width is 300px\n    const centerY = screenHeight / 2 - 150; // Assuming menu height is 300px\n\n    const newMenu = { \n      id: Date.now(), \n      position: { x: centerX, y: centerY }  // Set initial position to the center\n    };\n    setMenus([...menus, newMenu]);\n  };\n\n  // Function to remove a menu by its ID\n  const removeMenu = (id) => {\n    setMenus(menus.filter(menu => menu.id !== id));\n  };\n\n  // File upload handling logic from FileUpload component\n  const handleFileChange = (event) => {\n    setFile(event.target.files[0]);\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const formData = new FormData();\n    formData.append('file', file);\n\n    const response = await fetch('http://127.0.0.1:8000/plot-logs/', { \n        method: 'POST',\n        body: formData,\n    });        \n\n    if (response.ok) {\n        console.log('File uploaded successfully');\n        const svg = await response.text();\n        setSvgContent(svg);  // Set the SVG content to display in UI\n    } else {\n        console.error('File upload failed');\n        const errorText = await response.text();\n        console.error('Response Text:', errorText);\n    }\n  };\n\n  const handleOtherPlot = async (event) => {\n    event.preventDefault();\n    const formData = new FormData();\n    formData.append('file', file);\n\n    const response = await fetch('http://127.0.0.1:8000/plot-other-log/', { \n        method: 'POST',\n        body: formData,\n    });        \n\n    if (response.ok) {\n        console.log('File uploaded successfully');\n        const svg = await response.text();\n        setSvgContent(svg);  // Set the SVG content to display in UI\n    } else {\n        console.error('File upload failed');\n        const errorText = await response.text();\n        console.error('Response Text:', errorText);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      {appScreen === \"paper\" && (\n        <View icon=\"\" goToScreen=\"\" screen={appScreen} setScreen={setScreen}>\n          <PaperCanvas setPaperReady={setPaperReady} />\n          {paperReady && (\n            <CreateGridBG \n              paper={paperReady} \n              paperReady={paperReady}\n            />\n          )}\n\n          {/* Button to add new menu */}\n          <button onClick={addNewMenu}>Add New Menu</button>\n\n          {/* Render all draggable menus */}\n          {menus.map((menu) => (\n            <Draggable \n              key={menu.id} \n              defaultPosition={menu.position} // Set initial position to the center\n            >\n              <div className=\"draggable-menu\" style={{ position: 'absolute', zIndex: 10, backgroundColor: '#fff', padding: '20px', borderRadius: '8px', boxShadow: '0 4px 8px rgba(0,0,0,0.2)' }}>\n                <Menus \n                  handleFileChange={handleFileChange} \n                  handleSubmit={handleSubmit} \n                  handleOtherPlot={handleOtherPlot}\n                  file={file} \n                  svgContent={svgContent}\n                />\n                <button onClick={() => removeMenu(menu.id)}>Close Menu</button>\n              </div>\n            </Draggable>\n          ))}\n        </View>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}