{"ast":null,"code":"var _jsxFileName = \"/Users/mariahjadegardner/UTA/FA24/Research/HackGeo/blockhead/ui/front-end/well-logged/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport { useState, useRef } from 'react';\nimport { PaperCanvas } from './components/PaperCanvas.jsx'; // Importing PaperCanvas component\nimport { View } from './components/View.jsx';\nimport { CreateGridBG } from './interactions/CreateGridBG.jsx';\nimport { Menus } from './components/Menus.jsx';\nimport Draggable from 'react-draggable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst START_SCREEN = \"paper\";\nfunction App() {\n  _s();\n  const [appScreen, setScreen] = useState(START_SCREEN);\n  const [paperReady, setPaperReady] = useState(false);\n  const [file, setFile] = useState(null);\n  const [svgContent, setSvgContent] = useState(null); // State for SVG content\n  const [menus, setMenus] = useState([]); // Array to track all menus\n  const paperCanvasRef = useRef(null); // Ref to track PaperCanvas\n\n  // Function to add a new menu and position it in the center of the PaperCanvas\n  const addNewMenu = () => {\n    const paperCanvas = paperCanvasRef.current;\n    if (paperCanvas) {\n      const canvasRect = paperCanvas.getBoundingClientRect(); // Get PaperCanvas dimensions\n\n      // Calculate the center position of PaperCanvas\n      const centerX = canvasRect.width / 2 - 150; // Assuming menu width is 300px\n      const centerY = canvasRect.height / 2 - 150; // Assuming menu height is 300px\n\n      const newMenu = {\n        id: Date.now(),\n        position: {\n          x: centerX,\n          // Center horizontally within PaperCanvas\n          y: centerY // Center vertically within PaperCanvas\n        }\n      };\n      setMenus([...menus, newMenu]); // Add new menu with calculated position\n    }\n  };\n\n  // Function to remove a menu by its ID\n  const removeMenu = id => {\n    setMenus(menus.filter(menu => menu.id !== id));\n  };\n\n  // File upload handling logic from FileUpload component\n  const handleFileChange = event => {\n    setFile(event.target.files[0]);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const formData = new FormData();\n    formData.append('file', file);\n    const response = await fetch('http://127.0.0.1:8000/plot-logs/', {\n      method: 'POST',\n      body: formData\n    });\n    if (response.ok) {\n      console.log('File uploaded successfully');\n      const svg = await response.text();\n      setSvgContent(svg); // Set the SVG content to display in UI\n    } else {\n      console.error('File upload failed');\n      const errorText = await response.text();\n      console.error('Response Text:', errorText);\n    }\n  };\n  const handleOtherPlot = async event => {\n    event.preventDefault();\n    const formData = new FormData();\n    formData.append('file', file);\n    const response = await fetch('http://127.0.0.1:8000/plot-other-log/', {\n      method: 'POST',\n      body: formData\n    });\n    if (response.ok) {\n      console.log('File uploaded successfully');\n      const svg = await response.text();\n      setSvgContent(svg); // Set the SVG content to display in UI\n    } else {\n      console.error('File upload failed');\n      const errorText = await response.text();\n      console.error('Response Text:', errorText);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: appScreen === \"paper\" && /*#__PURE__*/_jsxDEV(View, {\n      icon: \"\",\n      goToScreen: \"\",\n      screen: appScreen,\n      setScreen: setScreen,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        ref: paperCanvasRef,\n        style: {\n          position: 'relative',\n          width: '100%',\n          height: '500px',\n          backgroundColor: '#f5f5f5'\n        },\n        children: [/*#__PURE__*/_jsxDEV(PaperCanvas, {\n          setPaperReady: setPaperReady\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), paperReady && /*#__PURE__*/_jsxDEV(CreateGridBG, {\n        paper: paperReady,\n        paperReady: paperReady\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addNewMenu,\n        children: \"Add New Menu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this), menus.map(menu => /*#__PURE__*/_jsxDEV(Draggable, {\n        defaultPosition: menu.position // Set initial position to center of PaperCanvas\n        ,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"draggable-menu\",\n          style: {\n            position: 'absolute',\n            zIndex: 10,\n            backgroundColor: '#fff',\n            padding: '20px',\n            borderRadius: '8px',\n            boxShadow: '0 4px 8px rgba(0,0,0,0.2)'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Menus, {\n            handleFileChange: handleFileChange,\n            handleSubmit: handleSubmit,\n            handleOtherPlot: handleOtherPlot,\n            file: file,\n            svgContent: svgContent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => removeMenu(menu.id),\n            children: \"Close Menu\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 15\n        }, this)\n      }, menu.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"wzV4iKMHXu8vH+8EvEyJgXkTg0M=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useRef","PaperCanvas","View","CreateGridBG","Menus","Draggable","jsxDEV","_jsxDEV","START_SCREEN","App","_s","appScreen","setScreen","paperReady","setPaperReady","file","setFile","svgContent","setSvgContent","menus","setMenus","paperCanvasRef","addNewMenu","paperCanvas","current","canvasRect","getBoundingClientRect","centerX","width","centerY","height","newMenu","id","Date","now","position","x","y","removeMenu","filter","menu","handleFileChange","event","target","files","handleSubmit","preventDefault","formData","FormData","append","response","fetch","method","body","ok","console","log","svg","text","error","errorText","handleOtherPlot","className","children","icon","goToScreen","screen","ref","style","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","paper","onClick","map","defaultPosition","zIndex","padding","borderRadius","boxShadow","_c","$RefreshReg$"],"sources":["/Users/mariahjadegardner/UTA/FA24/Research/HackGeo/blockhead/ui/front-end/well-logged/src/App.js"],"sourcesContent":["import './App.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport { useState, useRef } from 'react';\nimport { PaperCanvas } from './components/PaperCanvas.jsx'; // Importing PaperCanvas component\nimport { View } from './components/View.jsx'; \nimport { CreateGridBG } from './interactions/CreateGridBG.jsx';\nimport { Menus } from './components/Menus.jsx';\nimport Draggable from 'react-draggable';\n\nconst START_SCREEN = \"paper\";\n\nfunction App() {\n  const [appScreen, setScreen] = useState(START_SCREEN);\n  const [paperReady, setPaperReady] = useState(false);\n  const [file, setFile] = useState(null);\n  const [svgContent, setSvgContent] = useState(null); // State for SVG content\n  const [menus, setMenus] = useState([]); // Array to track all menus\n  const paperCanvasRef = useRef(null); // Ref to track PaperCanvas\n\n  // Function to add a new menu and position it in the center of the PaperCanvas\n  const addNewMenu = () => {\n    const paperCanvas = paperCanvasRef.current;\n    if (paperCanvas) {\n      const canvasRect = paperCanvas.getBoundingClientRect(); // Get PaperCanvas dimensions\n\n      // Calculate the center position of PaperCanvas\n      const centerX = canvasRect.width / 2 - 150; // Assuming menu width is 300px\n      const centerY = canvasRect.height / 2 - 150; // Assuming menu height is 300px\n\n      const newMenu = { \n        id: Date.now(), \n        position: { \n          x: centerX, // Center horizontally within PaperCanvas\n          y: centerY  // Center vertically within PaperCanvas\n        }\n      };\n\n      setMenus([...menus, newMenu]); // Add new menu with calculated position\n    }\n  };\n\n  // Function to remove a menu by its ID\n  const removeMenu = (id) => {\n    setMenus(menus.filter(menu => menu.id !== id));\n  };\n\n  // File upload handling logic from FileUpload component\n  const handleFileChange = (event) => {\n    setFile(event.target.files[0]);\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const formData = new FormData();\n    formData.append('file', file);\n\n    const response = await fetch('http://127.0.0.1:8000/plot-logs/', { \n        method: 'POST',\n        body: formData,\n    });        \n\n    if (response.ok) {\n        console.log('File uploaded successfully');\n        const svg = await response.text();\n        setSvgContent(svg);  // Set the SVG content to display in UI\n    } else {\n        console.error('File upload failed');\n        const errorText = await response.text();\n        console.error('Response Text:', errorText);\n    }\n  };\n\n  const handleOtherPlot = async (event) => {\n    event.preventDefault();\n    const formData = new FormData();\n    formData.append('file', file);\n\n    const response = await fetch('http://127.0.0.1:8000/plot-other-log/', { \n        method: 'POST',\n        body: formData,\n    });        \n\n    if (response.ok) {\n        console.log('File uploaded successfully');\n        const svg = await response.text();\n        setSvgContent(svg);  // Set the SVG content to display in UI\n    } else {\n        console.error('File upload failed');\n        const errorText = await response.text();\n        console.error('Response Text:', errorText);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      {appScreen === \"paper\" && (\n        <View icon=\"\" goToScreen=\"\" screen={appScreen} setScreen={setScreen}>\n          {/* PaperCanvas */}\n          <div ref={paperCanvasRef} style={{ position: 'relative', width: '100%', height: '500px', backgroundColor: '#f5f5f5' }}>\n            <PaperCanvas setPaperReady={setPaperReady} /> {/* The PaperCanvas */}\n          </div>\n\n          {/* Grid creation logic */}\n          {paperReady && (\n            <CreateGridBG \n              paper={paperReady} \n              paperReady={paperReady}\n            />\n          )}\n\n          {/* Button to add new menu */}\n          <button onClick={addNewMenu}>Add New Menu</button>\n\n          {/* Render all draggable menus */}\n          {menus.map((menu) => (\n            <Draggable \n              key={menu.id} \n              defaultPosition={menu.position} // Set initial position to center of PaperCanvas\n            >\n              <div className=\"draggable-menu\" style={{ position: 'absolute', zIndex: 10, backgroundColor: '#fff', padding: '20px', borderRadius: '8px', boxShadow: '0 4px 8px rgba(0,0,0,0.2)' }}>\n                <Menus \n                  handleFileChange={handleFileChange} \n                  handleSubmit={handleSubmit} \n                  handleOtherPlot={handleOtherPlot}\n                  file={file} \n                  svgContent={svgContent}\n                />\n                <button onClick={() => removeMenu(menu.id)}>Close Menu</button>\n              </div>\n            </Draggable>\n          ))}\n        </View>\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}