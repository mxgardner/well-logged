{"ast":null,"code":"var _jsxFileName = \"/Users/mariahjadegardner/UTA/FA24/Research/HackGeo/blockhead/ui/front-end/well-logged/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport { useState, useRef } from 'react';\nimport { PaperCanvas } from './components/PaperCanvas.jsx'; // PaperCanvas component\nimport { View } from './components/View.jsx';\nimport { CreateGridBG } from './interactions/CreateGridBG.jsx';\nimport Draggable from 'react-draggable'; // Draggable package\nimport Menus from './components/Menus.jsx'; // Menus component\n\n// The App component, which adds new menus and centers them within the PaperCanvas\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [appScreen, setScreen] = useState(\"paper\");\n  const [paperReady, setPaperReady] = useState(false);\n  const [menus, setMenus] = useState([]); // Array to track all menus\n  const paperCanvasRef = useRef(null); // Ref to track PaperCanvas\n\n  // Function to add a new menu and position it in the center of the PaperCanvas\n  const addNewMenu = () => {\n    const paperCanvas = paperCanvasRef.current;\n    if (paperCanvas) {\n      const canvasRect = paperCanvas.getBoundingClientRect(); // Get PaperCanvas dimensions\n\n      // Calculate the center position of PaperCanvas\n      const centerX = canvasRect.width / 2 - 150; // Assuming menu width is 300px\n      const centerY = canvasRect.height / 2 - 150; // Assuming menu height is 300px\n\n      const newMenu = {\n        id: Date.now(),\n        position: {\n          x: centerX,\n          // Center horizontally within PaperCanvas\n          y: centerY // Center vertically within PaperCanvas\n        }\n      };\n      setMenus([...menus, newMenu]); // Add new menu with calculated position\n    }\n  };\n\n  // Function to remove a menu by its ID\n  const removeMenu = id => {\n    setMenus(menus.filter(menu => menu.id !== id));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: appScreen === \"paper\" && /*#__PURE__*/_jsxDEV(View, {\n      icon: \"\",\n      goToScreen: \"\",\n      screen: appScreen,\n      setScreen: setScreen,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        ref: paperCanvasRef,\n        style: {\n          position: 'relative',\n          width: '100%',\n          height: '500px',\n          backgroundColor: '#f5f5f5'\n        },\n        children: [/*#__PURE__*/_jsxDEV(PaperCanvas, {\n          setPaperReady: setPaperReady\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), paperReady && /*#__PURE__*/_jsxDEV(CreateGridBG, {\n        paper: paperReady,\n        paperReady: paperReady\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addNewMenu,\n        children: \"Add New Menu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), menus.map(menu => /*#__PURE__*/_jsxDEV(Draggable, {\n        defaultPosition: menu.position // Set initial position to center of PaperCanvas\n        ,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"draggable-menu\",\n          style: {\n            position: 'absolute',\n            zIndex: 10,\n            backgroundColor: '#fff',\n            padding: '20px',\n            borderRadius: '8px',\n            boxShadow: '0 4px 8px rgba(0,0,0,0.2)'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Menus, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => removeMenu(menu.id),\n            children: \"Close Menu\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }, this)\n      }, menu.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"9BLu+r0I5kw+qz0r0frDCnd3CaQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useRef","PaperCanvas","View","CreateGridBG","Draggable","Menus","jsxDEV","_jsxDEV","App","_s","appScreen","setScreen","paperReady","setPaperReady","menus","setMenus","paperCanvasRef","addNewMenu","paperCanvas","current","canvasRect","getBoundingClientRect","centerX","width","centerY","height","newMenu","id","Date","now","position","x","y","removeMenu","filter","menu","className","children","icon","goToScreen","screen","ref","style","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","paper","onClick","map","defaultPosition","zIndex","padding","borderRadius","boxShadow","_c","$RefreshReg$"],"sources":["/Users/mariahjadegardner/UTA/FA24/Research/HackGeo/blockhead/ui/front-end/well-logged/src/App.js"],"sourcesContent":["import './App.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport { useState, useRef } from 'react';\nimport { PaperCanvas } from './components/PaperCanvas.jsx'; // PaperCanvas component\nimport { View } from './components/View.jsx'; \nimport { CreateGridBG } from './interactions/CreateGridBG.jsx';\nimport Draggable from 'react-draggable'; // Draggable package\nimport Menus from './components/Menus.jsx'; // Menus component\n\n// The App component, which adds new menus and centers them within the PaperCanvas\nfunction App() {\n  const [appScreen, setScreen] = useState(\"paper\");\n  const [paperReady, setPaperReady] = useState(false);\n  const [menus, setMenus] = useState([]); // Array to track all menus\n  const paperCanvasRef = useRef(null); // Ref to track PaperCanvas\n\n  // Function to add a new menu and position it in the center of the PaperCanvas\n  const addNewMenu = () => {\n    const paperCanvas = paperCanvasRef.current;\n    if (paperCanvas) {\n      const canvasRect = paperCanvas.getBoundingClientRect(); // Get PaperCanvas dimensions\n\n      // Calculate the center position of PaperCanvas\n      const centerX = canvasRect.width / 2 - 150; // Assuming menu width is 300px\n      const centerY = canvasRect.height / 2 - 150; // Assuming menu height is 300px\n\n      const newMenu = { \n        id: Date.now(), \n        position: { \n          x: centerX, // Center horizontally within PaperCanvas\n          y: centerY  // Center vertically within PaperCanvas\n        }\n      };\n\n      setMenus([...menus, newMenu]); // Add new menu with calculated position\n    }\n  };\n\n  // Function to remove a menu by its ID\n  const removeMenu = (id) => {\n    setMenus(menus.filter(menu => menu.id !== id));\n  };\n\n  return (\n    <div className=\"App\">\n      {appScreen === \"paper\" && (\n        <View icon=\"\" goToScreen=\"\" screen={appScreen} setScreen={setScreen}>\n          {/* PaperCanvas */}\n          <div ref={paperCanvasRef} style={{ position: 'relative', width: '100%', height: '500px', backgroundColor: '#f5f5f5' }}>\n            <PaperCanvas setPaperReady={setPaperReady} /> {/* The PaperCanvas */}\n          </div>\n\n          {/* Grid creation logic */}\n          {paperReady && (\n            <CreateGridBG \n              paper={paperReady} \n              paperReady={paperReady}\n            />\n          )}\n\n          {/* Button to add new menu */}\n          <button onClick={addNewMenu}>Add New Menu</button>\n\n          {/* Render all draggable menus */}\n          {menus.map((menu) => (\n            <Draggable \n              key={menu.id} \n              defaultPosition={menu.position} // Set initial position to center of PaperCanvas\n            >\n              <div className=\"draggable-menu\" style={{ position: 'absolute', zIndex: 10, backgroundColor: '#fff', padding: '20px', borderRadius: '8px', boxShadow: '0 4px 8px rgba(0,0,0,0.2)' }}>\n                {/* Use Menus component inside the draggable menu */}\n                <Menus /> \n                <button onClick={() => removeMenu(menu.id)}>Close Menu</button>\n              </div>\n            </Draggable>\n          ))}\n        </View>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}