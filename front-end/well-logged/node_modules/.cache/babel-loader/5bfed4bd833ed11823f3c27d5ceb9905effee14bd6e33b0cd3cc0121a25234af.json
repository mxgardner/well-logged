{"ast":null,"code":"var _jsxFileName = \"/Users/mariahjadegardner/UTA/FA24/Research/HackGeo/blockhead/ui/front-end/well-logged/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport { useState } from 'react';\nimport { PaperCanvas } from './components/PaperCanvas.jsx';\nimport { View } from './components/View.jsx';\nimport { CreateGridBG } from './interactions/CreateGridBG.jsx';\nimport { Menus } from './components/Menus.jsx';\nimport Draggable from 'react-draggable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst START_SCREEN = \"paper\";\nfunction App() {\n  _s();\n  const [appScreen, setScreen] = useState(START_SCREEN);\n  const [paperReady, setPaperReady] = useState(false);\n  const [file, setFile] = useState(null);\n  const [svgContent, setSvgContent] = useState(null); // State for SVG content\n\n  // File upload handling logic from FileUpload component\n  const handleFileChange = event => {\n    setFile(event.target.files[0]);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const formData = new FormData();\n    formData.append('file', file);\n    const response = await fetch('http://127.0.0.1:8000/plot-logs/', {\n      method: 'POST',\n      body: formData\n    });\n    if (response.ok) {\n      console.log('File uploaded successfully');\n      const svg = await response.text();\n      setSvgContent(svg); // Set the SVG content to display in UI\n    } else {\n      console.error('File upload failed');\n      const errorText = await response.text();\n      console.error('Response Text:', errorText);\n    }\n  };\n  const handleOtherPlot = async event => {\n    event.preventDefault();\n    const formData = new FormData();\n    formData.append('file', file);\n    const response = await fetch('http://127.0.0.1:8000/plot-other-log/', {\n      method: 'POST',\n      body: formData\n    });\n    if (response.ok) {\n      console.log('File uploaded successfully');\n      const svg = await response.text();\n      setSvgContent(svg); // Set the SVG content to display in UI\n    } else {\n      console.error('File upload failed');\n      const errorText = await response.text();\n      console.error('Response Text:', errorText);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: appScreen === \"paper\" && /*#__PURE__*/_jsxDEV(View, {\n      icon: \"\",\n      goToScreen: \"\",\n      screen: appScreen,\n      setScreen: setScreen,\n      children: [/*#__PURE__*/_jsxDEV(PaperCanvas, {\n        setPaperReady: setPaperReady\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), paperReady && /*#__PURE__*/_jsxDEV(CreateGridBG, {\n        paper: paperReady,\n        paperReady: paperReady\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Draggable, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"draggable-menu\",\n          style: {\n            position: 'absolute',\n            zIndex: 10,\n            backgroundColor: '#fff',\n            padding: '20px',\n            borderRadius: '8px',\n            boxShadow: '0 4px 8px rgba(0,0,0,0.2)'\n          },\n          children: /*#__PURE__*/_jsxDEV(Menus, {\n            handleFileChange: handleFileChange,\n            handleSubmit: handleSubmit,\n            handleOtherPlot: handleOtherPlot,\n            file: file,\n            svgContent: svgContent // Pass SVG content to Menus for display\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"4XHL9OuYgVXj0R0UwCdiCMlXW94=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","PaperCanvas","View","CreateGridBG","Menus","Draggable","jsxDEV","_jsxDEV","START_SCREEN","App","_s","appScreen","setScreen","paperReady","setPaperReady","file","setFile","svgContent","setSvgContent","handleFileChange","event","target","files","handleSubmit","preventDefault","formData","FormData","append","response","fetch","method","body","ok","console","log","svg","text","error","errorText","handleOtherPlot","className","children","icon","goToScreen","screen","fileName","_jsxFileName","lineNumber","columnNumber","paper","style","position","zIndex","backgroundColor","padding","borderRadius","boxShadow","_c","$RefreshReg$"],"sources":["/Users/mariahjadegardner/UTA/FA24/Research/HackGeo/blockhead/ui/front-end/well-logged/src/App.js"],"sourcesContent":["import './App.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport { useState } from 'react';\nimport { PaperCanvas } from './components/PaperCanvas.jsx';\nimport { View } from './components/View.jsx';\nimport { CreateGridBG } from './interactions/CreateGridBG.jsx';\nimport { Menus } from './components/Menus.jsx';\nimport Draggable from 'react-draggable';\n\nconst START_SCREEN = \"paper\";\n\nfunction App() {\n  const [appScreen, setScreen] = useState(START_SCREEN);\n  const [paperReady, setPaperReady] = useState(false);\n  const [file, setFile] = useState(null);\n  const [svgContent, setSvgContent] = useState(null); // State for SVG content\n\n  // File upload handling logic from FileUpload component\n  const handleFileChange = (event) => {\n    setFile(event.target.files[0]);\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const formData = new FormData();\n    formData.append('file', file);\n\n    const response = await fetch('http://127.0.0.1:8000/plot-logs/', { \n        method: 'POST',\n        body: formData,\n    });        \n\n    if (response.ok) {\n        console.log('File uploaded successfully');\n        const svg = await response.text();\n        setSvgContent(svg);  // Set the SVG content to display in UI\n    } else {\n        console.error('File upload failed');\n        const errorText = await response.text();\n        console.error('Response Text:', errorText);\n    }\n  };\n\n  const handleOtherPlot = async (event) => {\n    event.preventDefault();\n    const formData = new FormData();\n    formData.append('file', file);\n\n    const response = await fetch('http://127.0.0.1:8000/plot-other-log/', { \n        method: 'POST',\n        body: formData,\n    });        \n\n    if (response.ok) {\n        console.log('File uploaded successfully');\n        const svg = await response.text();\n        setSvgContent(svg);  // Set the SVG content to display in UI\n    } else {\n        console.error('File upload failed');\n        const errorText = await response.text();\n        console.error('Response Text:', errorText);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      {appScreen === \"paper\" && (\n        <View icon=\"\" goToScreen=\"\" screen={appScreen} setScreen={setScreen}>\n          <PaperCanvas setPaperReady={setPaperReady} />\n          {paperReady && (\n            <CreateGridBG \n              paper={paperReady} \n              paperReady={paperReady}\n            />\n          )}\n          {/* Draggable Menu */}\n          <Draggable>\n            <div className=\"draggable-menu\" style={{ position: 'absolute', zIndex: 10, backgroundColor: '#fff', padding: '20px', borderRadius: '8px', boxShadow: '0 4px 8px rgba(0,0,0,0.2)' }}>\n              <Menus \n                handleFileChange={handleFileChange} \n                handleSubmit={handleSubmit} \n                handleOtherPlot={handleOtherPlot}\n                file={file} \n                svgContent={svgContent}  // Pass SVG content to Menus for display\n              />\n            </div>\n          </Draggable>\n        </View>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}