{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect } from 'react';\nconst createGrid = paper => {\n  console.log('Creating grid...');\n  const cellSize = 20;\n  const gridSizeX = paper.view.bounds.width;\n  const gridSizeY = paper.view.bounds.height;\n  const startPointX = paper.view.bounds.left;\n  const startPointY = paper.view.bounds.top;\n\n  // Create vertical Lines\n  for (let y = startPointY; y <= gridSizeY; y += cellSize) {\n    const start = new paper.Point(startPointX, y);\n    const end = new paper.Point(gridSizeX, y);\n    new paper.Path.Line({\n      from: start,\n      to: end,\n      strokeColor: black,\n      strokeWidth: 0.5,\n      strokeDashArray: [4, 4],\n      name: 'gridDot'\n    });\n  }\n\n  // Creeate horizontal Lines\n  for (let x = startPointX; x <= gridSizeX; x += cellSize) {\n    const start = new paper.Point(x, startPointY);\n    const end = new paper.Point(x, gridSizeY);\n    new paper.Path.line({\n      from: start,\n      to: end,\n      strokeColor: new paper.Color(0, 0, 0, 0.2),\n      strokeWidth: 0.5,\n      strokeDashArray: [4, 4],\n      name: 'gridDot'\n    });\n  }\n};\nconst createYarnLine = paper => {\n  const canvasWidth = paper.view.bounds.width;\n  const canvasHeight = paper.view.bounds.height;\n  const centerY = canvasHeight / 2; // Middle of the canvas on the Y-axis\n\n  const amplitude = 20; // The height of the wave\n  const frequency = 50; // Distance between peaks\n  const strokeColor = 'black';\n  const strokeWidth = 2;\n\n  // Create the path for the yarn\n  const yarnPath = new paper.Path({\n    strokeColor: strokeColor,\n    strokeWidth: strokeWidth,\n    strokeCap: 'round'\n  });\n\n  // Loop through points to create a wavy line\n  for (let x = 0; x <= canvasWidth; x += frequency) {\n    const offsetY = Math.sin(x / frequency * Math.PI) * amplitude; // Wavy effect\n    const point = new paper.Point(x, centerY + offsetY);\n    yarnPath.add(point); // Add each point to the path\n  }\n  yarnPath.smooth();\n};\nconst DirectManipulation = ({\n  paper,\n  paperReady\n}) => {\n  _s();\n  useEffect(() => {\n    if (paperReady) {\n      const paper = paperReady;\n      paper.project.clear();\n      paper.view.zoom = 10;\n      createGrid(paper);\n      createYarnLine(paper);\n    }\n  }, [paperReady]);\n  return null;\n};\n_s(DirectManipulation, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = DirectManipulation;\nexport { DirectManipulation };\nvar _c;\n$RefreshReg$(_c, \"DirectManipulation\");","map":{"version":3,"names":["useEffect","createGrid","paper","console","log","cellSize","gridSizeX","view","bounds","width","gridSizeY","height","startPointX","left","startPointY","top","y","start","Point","end","Path","Line","from","to","strokeColor","black","strokeWidth","strokeDashArray","name","x","line","Color","createYarnLine","canvasWidth","canvasHeight","centerY","amplitude","frequency","yarnPath","strokeCap","offsetY","Math","sin","PI","point","add","smooth","DirectManipulation","paperReady","_s","project","clear","zoom","_c","$RefreshReg$"],"sources":["/Users/mariahjadegardner/UTA/FA24/Research/string-theory/string-theory/src/interactions/DirectManipulation.jsx"],"sourcesContent":["import { useEffect } from 'react';\n\nconst createGrid = (paper) => {  \n    console.log('Creating grid...');\n    const cellSize = 20;\n    const gridSizeX = paper.view.bounds.width;\n    const gridSizeY = paper.view.bounds.height;\n\n    const startPointX = paper.view.bounds.left;\n    const startPointY = paper.view.bounds.top;\n\n    // Create vertical Lines\n    for(let y = startPointY; y <= gridSizeY; y += cellSize ){\n        const start = new paper.Point(startPointX, y);\n        const end = new paper.Point(gridSizeX, y);\n        new paper.Path.Line({\n            from: start,\n            to: end,\n            strokeColor: black,\n            strokeWidth: 0.5,\n            strokeDashArray: [4,4],\n            name: 'gridDot'\n        });\n    }\n\n    // Creeate horizontal Lines\n    for(let x = startPointX; x <= gridSizeX; x += cellSize ){\n        const start = new paper.Point(x, startPointY);\n        const end = new paper.Point(x, gridSizeY);\n        new paper.Path.line({\n            from: start,\n            to: end,\n            strokeColor: new paper.Color(0, 0, 0, 0.2),\n            strokeWidth: 0.5,\n            strokeDashArray: [4,4],\n            name: 'gridDot'\n        });\n    }\n};\n\nconst createYarnLine = (paper) => {\n    const canvasWidth = paper.view.bounds.width;\n    const canvasHeight = paper.view.bounds.height;\n    const centerY = canvasHeight / 2; // Middle of the canvas on the Y-axis\n    \n    const amplitude = 20;  // The height of the wave\n    const frequency = 50;  // Distance between peaks\n    const strokeColor = 'black';\n    const strokeWidth = 2;\n\n    // Create the path for the yarn\n    const yarnPath = new paper.Path({\n        strokeColor: strokeColor,\n        strokeWidth: strokeWidth,\n        strokeCap: 'round'\n    });\n\n    // Loop through points to create a wavy line\n    for (let x = 0; x <= canvasWidth; x += frequency) {\n         const offsetY = Math.sin(x / frequency * Math.PI) * amplitude; // Wavy effect\n        const point = new paper.Point(x, centerY + offsetY);\n        yarnPath.add(point);  // Add each point to the path\n    }\n\n    yarnPath.smooth();  \n};\n\n\nconst DirectManipulation = ({ paper, paperReady }) => {\n    useEffect(() => {\n        if (paperReady) {\n            const paper = paperReady;\n            paper.project.clear();\n            paper.view.zoom = 10;\n\n            createGrid(paper);\n            createYarnLine(paper);\n        }\n    }, [paperReady]);\n\n    return null;\n};\n\nexport { DirectManipulation };\n\n\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}