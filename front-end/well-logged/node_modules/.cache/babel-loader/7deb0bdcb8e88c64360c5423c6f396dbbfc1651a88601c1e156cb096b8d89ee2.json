{"ast":null,"code":"var _jsxFileName = \"/Users/mariahjadegardner/UTA/FA24/Research/HackGeo/blockhead/ui/front-end/well-logged/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport { useState } from 'react';\nimport { PaperCanvas } from './components/PaperCanvas.jsx';\nimport { View } from './components/View.jsx';\nimport { CreateGridBG } from './interactions/CreateGridBG.jsx';\nimport Draggable from 'react-draggable';\nimport InputMenu from './InputMenu';\nimport { Menus } from './components/Menus';\nimport InfoWindow from './InfoWindow'; // Import the InfoWindow component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst START_SCREEN = \"paper\";\nfunction App() {\n  _s();\n  const [appScreen, setScreen] = useState(START_SCREEN);\n  const [paperReady, setPaperReady] = useState(false);\n  const [file, setFile] = useState(null);\n  const [svgContent, setSvgContent] = useState(null); // State for SVG content\n  const [processedInput, setProcessedInput] = useState(null); // Store processed input from InputMenu\n\n  // Handle file change\n  const handleFileChange = event => {\n    setFile(event.target.files[0]);\n  };\n\n  // Handle file submission for CSV\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const formData = new FormData();\n    formData.append('file', file);\n    const response = await fetch('http://127.0.0.1:8000/plot-logs/', {\n      method: 'POST',\n      body: formData\n    });\n    if (response.ok) {\n      const svg = await response.text();\n      setSvgContent(svg);\n    } else {\n      console.error('File upload failed');\n    }\n  };\n\n  // Handle submission for other plot\n  const handleOtherPlot = async event => {\n    event.preventDefault();\n    const formData = new FormData();\n    formData.append('file', file);\n    const response = await fetch('http://127.0.0.1:8000/plot-other-log/', {\n      method: 'POST',\n      body: formData\n    });\n    if (response.ok) {\n      const svg = await response.text();\n      setSvgContent(svg);\n    } else {\n      console.error('File upload failed');\n    }\n  };\n\n  // Handle input processing from InputMenu\n  const handleProcessInput = input => {\n    setProcessedInput(input);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(InfoWindow, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), appScreen === \"paper\" && /*#__PURE__*/_jsxDEV(View, {\n      icon: \"\",\n      goToScreen: \"\",\n      screen: appScreen,\n      setScreen: setScreen,\n      children: [/*#__PURE__*/_jsxDEV(PaperCanvas, {\n        setPaperReady: setPaperReady\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), paperReady && /*#__PURE__*/_jsxDEV(CreateGridBG, {\n        paper: paperReady,\n        paperReady: paperReady\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Draggable, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"draggable-menu\",\n          style: {\n            position: 'absolute',\n            zIndex: 10,\n            backgroundColor: '#fff',\n            padding: '20px',\n            borderRadius: '8px',\n            boxShadow: '0 4px 8px rgba(0,0,0,0.2)',\n            top: '100px',\n            left: '50px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"File Upload Menu\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Menus, {\n            handleFileChange: handleFileChange,\n            handleSubmit: handleSubmit,\n            handleOtherPlot: handleOtherPlot,\n            file: file,\n            svgContent: svgContent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Draggable, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"draggable-menu\",\n          style: {\n            position: 'absolute',\n            zIndex: 10,\n            backgroundColor: '#fff',\n            padding: '20px',\n            borderRadius: '8px',\n            boxShadow: '0 4px 8px rgba(0,0,0,0.2)',\n            top: '300px',\n            left: '50px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"User Input Menu\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(InputMenu, {\n            onProcessInput: handleProcessInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this), processedInput && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '20px',\n          border: '1px solid #ddd',\n          padding: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Processed Input:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: processedInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"6MTHMIyqYGWU8ifor3fCsM/m7F4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","PaperCanvas","View","CreateGridBG","Draggable","InputMenu","Menus","InfoWindow","jsxDEV","_jsxDEV","START_SCREEN","App","_s","appScreen","setScreen","paperReady","setPaperReady","file","setFile","svgContent","setSvgContent","processedInput","setProcessedInput","handleFileChange","event","target","files","handleSubmit","preventDefault","formData","FormData","append","response","fetch","method","body","ok","svg","text","console","error","handleOtherPlot","handleProcessInput","input","className","children","fileName","_jsxFileName","lineNumber","columnNumber","icon","goToScreen","screen","paper","style","position","zIndex","backgroundColor","padding","borderRadius","boxShadow","top","left","onProcessInput","marginTop","border","_c","$RefreshReg$"],"sources":["/Users/mariahjadegardner/UTA/FA24/Research/HackGeo/blockhead/ui/front-end/well-logged/src/App.js"],"sourcesContent":["import './App.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport { useState } from 'react';\nimport { PaperCanvas } from './components/PaperCanvas.jsx';\nimport { View } from './components/View.jsx';\nimport { CreateGridBG } from './interactions/CreateGridBG.jsx';\nimport Draggable from 'react-draggable';\nimport InputMenu from './InputMenu';\nimport { Menus } from './components/Menus';\nimport InfoWindow from './InfoWindow'; // Import the InfoWindow component\n\nconst START_SCREEN = \"paper\";\n\nfunction App() {\n  const [appScreen, setScreen] = useState(START_SCREEN);\n  const [paperReady, setPaperReady] = useState(false);\n  const [file, setFile] = useState(null);\n  const [svgContent, setSvgContent] = useState(null); // State for SVG content\n  const [processedInput, setProcessedInput] = useState(null); // Store processed input from InputMenu\n\n  // Handle file change\n  const handleFileChange = (event) => {\n    setFile(event.target.files[0]);\n  };\n\n  // Handle file submission for CSV\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const formData = new FormData();\n    formData.append('file', file);\n\n    const response = await fetch('http://127.0.0.1:8000/plot-logs/', { \n      method: 'POST',\n      body: formData,\n    });\n\n    if (response.ok) {\n      const svg = await response.text();\n      setSvgContent(svg);\n    } else {\n      console.error('File upload failed');\n    }\n  };\n\n  // Handle submission for other plot\n  const handleOtherPlot = async (event) => {\n    event.preventDefault();\n    const formData = new FormData();\n    formData.append('file', file);\n\n    const response = await fetch('http://127.0.0.1:8000/plot-other-log/', { \n      method: 'POST',\n      body: formData,\n    });\n\n    if (response.ok) {\n      const svg = await response.text();\n      setSvgContent(svg);\n    } else {\n      console.error('File upload failed');\n    }\n  };\n\n  // Handle input processing from InputMenu\n  const handleProcessInput = (input) => {\n    setProcessedInput(input);\n  };\n\n  return (\n    <div className=\"App\">\n      {/* Informational Window */}\n      <InfoWindow />\n\n      {appScreen === \"paper\" && (\n        <View icon=\"\" goToScreen=\"\" screen={appScreen} setScreen={setScreen}>\n          <PaperCanvas setPaperReady={setPaperReady} />\n          {paperReady && (\n            <CreateGridBG \n              paper={paperReady} \n              paperReady={paperReady}\n            />\n          )}\n\n          {/* Draggable Menu for FileUpload */}\n          <Draggable>\n            <div \n              className=\"draggable-menu\" \n              style={{\n                position: 'absolute', \n                zIndex: 10, \n                backgroundColor: '#fff', \n                padding: '20px', \n                borderRadius: '8px', \n                boxShadow: '0 4px 8px rgba(0,0,0,0.2)',\n                top: '100px',\n                left: '50px'\n              }}\n            >\n              <h3>File Upload Menu</h3>\n              <Menus \n                handleFileChange={handleFileChange} \n                handleSubmit={handleSubmit} \n                handleOtherPlot={handleOtherPlot} \n                file={file} \n                svgContent={svgContent} \n              />\n            </div>\n          </Draggable>\n\n          {/* Draggable Menu for InputMenu */}\n          <Draggable>\n            <div \n              className=\"draggable-menu\" \n              style={{\n                position: 'absolute', \n                zIndex: 10, \n                backgroundColor: '#fff', \n                padding: '20px', \n                borderRadius: '8px', \n                boxShadow: '0 4px 8px rgba(0,0,0,0.2)',\n                top: '300px',\n                left: '50px'\n              }}\n            >\n              <h3>User Input Menu</h3>\n              <InputMenu onProcessInput={handleProcessInput} />\n            </div>\n          </Draggable>\n\n          {/* Optionally display the processed input */}\n          {processedInput && (\n            <div style={{ marginTop: '20px', border: '1px solid #ddd', padding: '10px' }}>\n              <h4>Processed Input:</h4>\n              <p>{processedInput}</p>\n            </div>\n          )}\n        </View>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}