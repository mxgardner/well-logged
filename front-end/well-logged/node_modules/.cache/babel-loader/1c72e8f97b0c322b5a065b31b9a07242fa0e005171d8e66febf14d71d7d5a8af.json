{"ast":null,"code":"var _jsxFileName = \"/Users/mariahjadegardner/UTA/FA24/Research/HackGeo/blockhead/ui/front-end/well-logged/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Menus } from './components/Menus.jsx';\nimport Draggable from 'react-draggable';\nimport './App.css'; // Import CSS for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst START_SCREEN = \"paper\";\nfunction App() {\n  _s();\n  const [appScreen, setScreen] = useState(START_SCREEN);\n  const [paperReady, setPaperReady] = useState(false);\n  const [file, setFile] = useState(null);\n  const [svgContent, setSvgContent] = useState(null); // State for SVG content\n\n  // File upload handling logic from FileUpload component\n  const handleFileChange = event => {\n    setFile(event.target.files[0]);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const formData = new FormData();\n    formData.append('file', file);\n    const response = await fetch('http://127.0.0.1:8000/plot-logs/', {\n      method: 'POST',\n      body: formData\n    });\n    if (response.ok) {\n      console.log('File uploaded successfully');\n      const svg = await response.text();\n      setSvgContent(svg); // Set the SVG content to display in UI\n    } else {\n      console.error('File upload failed');\n      const errorText = await response.text();\n      console.error('Response Text:', errorText);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Draggable, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"draggable-menu\",\n        children: /*#__PURE__*/_jsxDEV(Menus, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"4XHL9OuYgVXj0R0UwCdiCMlXW94=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Menus","Draggable","jsxDEV","_jsxDEV","START_SCREEN","App","_s","appScreen","setScreen","paperReady","setPaperReady","file","setFile","svgContent","setSvgContent","handleFileChange","event","target","files","handleSubmit","preventDefault","formData","FormData","append","response","fetch","method","body","ok","console","log","svg","text","error","errorText","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mariahjadegardner/UTA/FA24/Research/HackGeo/blockhead/ui/front-end/well-logged/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Menus } from './components/Menus.jsx';\nimport Draggable from 'react-draggable';\nimport './App.css'; // Import CSS for styling\n\nconst START_SCREEN = \"paper\";\n\nfunction App() {\n  const [appScreen, setScreen] = useState(START_SCREEN);\n  const [paperReady, setPaperReady] = useState(false);\n  const [file, setFile] = useState(null);\n  const [svgContent, setSvgContent] = useState(null); // State for SVG content\n\n  // File upload handling logic from FileUpload component\n  const handleFileChange = (event) => {\n    setFile(event.target.files[0]);\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const formData = new FormData();\n    formData.append('file', file);\n\n    const response = await fetch('http://127.0.0.1:8000/plot-logs/', { \n        method: 'POST',\n        body: formData,\n    });        \n\n    if (response.ok) {\n        console.log('File uploaded successfully');\n        const svg = await response.text();\n        setSvgContent(svg);  // Set the SVG content to display in UI\n    } else {\n        console.error('File upload failed');\n        const errorText = await response.text();\n        console.error('Response Text:', errorText);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <Draggable>\n        <div className=\"draggable-menu\">\n          <Menus />\n        </div>\n      </Draggable>\n      {/* Other components and logic */}\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n\n\n\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,KAAK,QAAQ,wBAAwB;AAC9C,OAAOC,SAAS,MAAM,iBAAiB;AACvC,OAAO,WAAW,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,YAAY,GAAG,OAAO;AAE5B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,SAAS,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAACK,YAAY,CAAC;EACrD,MAAM,CAACK,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACY,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACc,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAEpD;EACA,MAAMgB,gBAAgB,GAAIC,KAAK,IAAK;IAClCJ,OAAO,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAChC,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOH,KAAK,IAAK;IACpCA,KAAK,CAACI,cAAc,CAAC,CAAC;IACtB,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEZ,IAAI,CAAC;IAE7B,MAAMa,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,EAAE;MAC7DC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEN;IACV,CAAC,CAAC;IAEF,IAAIG,QAAQ,CAACI,EAAE,EAAE;MACbC,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;MACzC,MAAMC,GAAG,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MACjClB,aAAa,CAACiB,GAAG,CAAC,CAAC,CAAE;IACzB,CAAC,MAAM;MACHF,OAAO,CAACI,KAAK,CAAC,oBAAoB,CAAC;MACnC,MAAMC,SAAS,GAAG,MAAMV,QAAQ,CAACQ,IAAI,CAAC,CAAC;MACvCH,OAAO,CAACI,KAAK,CAAC,gBAAgB,EAAEC,SAAS,CAAC;IAC9C;EACF,CAAC;EAED,oBACE/B,OAAA;IAAKgC,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBjC,OAAA,CAACF,SAAS;MAAAmC,QAAA,eACRjC,OAAA;QAAKgC,SAAS,EAAC,gBAAgB;QAAAC,QAAA,eAC7BjC,OAAA,CAACH,KAAK;UAAAqC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAET,CAAC;AAEV;AAAClC,EAAA,CA1CQD,GAAG;AAAAoC,EAAA,GAAHpC,GAAG;AA4CZ,eAAeA,GAAG;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}