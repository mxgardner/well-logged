{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect } from 'react';\nconst createGrid = paper => {\n  console.log('Creating grid...');\n  const cellSize = 20;\n  const gridSizeX = paper.view.bounds.width;\n  const gridSizeY = paper.view.bounds.height;\n\n  // Loop through grid (size of paper) and place a small dot at each intersection\n  for (let y = 0; y <= gridSizeY; y += cellSize) {\n    for (let x = 0; x <= gridSizeX; x += cellSize) {\n      // Create a circle at each intersection\n      new paper.Path.Circle({\n        center: new paper.Point(x, y),\n        radius: 1.5,\n        fillColor: new paper.Color(0, 0, 0, 0.1),\n        name: 'gridDot'\n      });\n    }\n  }\n};\nconst CreateGridBG = ({\n  paper,\n  paperReady\n}) => {\n  _s();\n  useEffect(() => {\n    if (paperReady) {\n      createGrid(paper);\n      createYarnLine(paper);\n    }\n  }, [paperReady]);\n  return null;\n};\n_s(CreateGridBG, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = CreateGridBG;\nexport { CreateGridBG };\nvar _c;\n$RefreshReg$(_c, \"CreateGridBG\");","map":{"version":3,"names":["useEffect","createGrid","paper","console","log","cellSize","gridSizeX","view","bounds","width","gridSizeY","height","y","x","Path","Circle","center","Point","radius","fillColor","Color","name","CreateGridBG","paperReady","_s","createYarnLine","_c","$RefreshReg$"],"sources":["/Users/mariahjadegardner/UTA/FA24/Research/HackGeo/blockhead-1/ui/front-end/well-logged/src/interactions/CreateGridBG.jsx"],"sourcesContent":["import { useEffect } from 'react';\n\nconst createGrid = (paper) => {\n    console.log('Creating grid...');\n    const cellSize = 20;\n    const gridSizeX = paper.view.bounds.width;\n    const gridSizeY = paper.view.bounds.height;\n\n    // Loop through grid (size of paper) and place a small dot at each intersection\n    for (let y = 0; y <= gridSizeY; y += cellSize) {\n        for (let x = 0; x <= gridSizeX; x += cellSize) {\n            // Create a circle at each intersection\n            new paper.Path.Circle({\n            center: new paper.Point(x, y),\n            radius: 1.5,\n            fillColor: new paper.Color(0, 0, 0, 0.1),\n            name: 'gridDot',\n            });\n        }\n    }\n};\n\nconst CreateGridBG = ({ paper, paperReady }) => {\n    useEffect(() => {\n        if (paperReady) {\n            createGrid(paper);\n            createYarnLine(paper);\n        }\n    }, [paperReady]);\n\n    return null;\n};\n\nexport { CreateGridBG };\n\n\n\n\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AAEjC,MAAMC,UAAU,GAAIC,KAAK,IAAK;EAC1BC,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;EAC/B,MAAMC,QAAQ,GAAG,EAAE;EACnB,MAAMC,SAAS,GAAGJ,KAAK,CAACK,IAAI,CAACC,MAAM,CAACC,KAAK;EACzC,MAAMC,SAAS,GAAGR,KAAK,CAACK,IAAI,CAACC,MAAM,CAACG,MAAM;;EAE1C;EACA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIF,SAAS,EAAEE,CAAC,IAAIP,QAAQ,EAAE;IAC3C,KAAK,IAAIQ,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIP,SAAS,EAAEO,CAAC,IAAIR,QAAQ,EAAE;MAC3C;MACA,IAAIH,KAAK,CAACY,IAAI,CAACC,MAAM,CAAC;QACtBC,MAAM,EAAE,IAAId,KAAK,CAACe,KAAK,CAACJ,CAAC,EAAED,CAAC,CAAC;QAC7BM,MAAM,EAAE,GAAG;QACXC,SAAS,EAAE,IAAIjB,KAAK,CAACkB,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC;QACxCC,IAAI,EAAE;MACN,CAAC,CAAC;IACN;EACJ;AACJ,CAAC;AAED,MAAMC,YAAY,GAAGA,CAAC;EAAEpB,KAAK;EAAEqB;AAAW,CAAC,KAAK;EAAAC,EAAA;EAC5CxB,SAAS,CAAC,MAAM;IACZ,IAAIuB,UAAU,EAAE;MACZtB,UAAU,CAACC,KAAK,CAAC;MACjBuB,cAAc,CAACvB,KAAK,CAAC;IACzB;EACJ,CAAC,EAAE,CAACqB,UAAU,CAAC,CAAC;EAEhB,OAAO,IAAI;AACf,CAAC;AAACC,EAAA,CATIF,YAAY;AAAAI,EAAA,GAAZJ,YAAY;AAWlB,SAASA,YAAY;AAAG,IAAAI,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}