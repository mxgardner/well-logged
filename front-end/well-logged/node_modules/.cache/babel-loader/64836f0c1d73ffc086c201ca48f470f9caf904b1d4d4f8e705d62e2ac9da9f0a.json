{"ast":null,"code":"var _jsxFileName = \"/Users/mariahjadegardner/UTA/FA24/Research/HackGeo/blockhead/ui/front-end/well-logged/src/interactions/CreateGridBG.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst createGrid = paper => {\n  if (!paper || !paper.view) {\n    console.error('Paper.js is not initialized yet.');\n    return;\n  }\n  console.log('Creating grid...');\n  const cellSize = 20;\n  const gridSizeX = paper.view.bounds.width;\n  const gridSizeY = paper.view.bounds.height;\n\n  // Loop through grid (size of paper) and place a small dot at each intersection\n  for (let y = 0; y <= gridSizeY; y += cellSize) {\n    for (let x = 0; x <= gridSizeX; x += cellSize) {\n      // Create a circle at each intersection\n      new paper.Path.Circle({\n        center: new paper.Point(x, y),\n        radius: 1.5,\n        fillColor: new paper.Color(0, 0, 0, 0.1),\n        name: 'gridDot'\n      });\n    }\n  }\n};\nconst CreateGridBG = ({\n  paper,\n  paperReady,\n  createMenu\n}) => {\n  _s();\n  useEffect(() => {\n    if (paperReady && paper) {\n      createGrid(paper);\n    }\n  }, [paperReady, paper]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: paperReady && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: createMenu,\n      style: {\n        position: 'absolute',\n        top: '10px',\n        left: '10px',\n        zIndex: 100,\n        padding: '10px 20px',\n        backgroundColor: '#007bff',\n        color: '#fff',\n        border: 'none',\n        borderRadius: '5px',\n        cursor: 'pointer'\n      },\n      children: \"Create Menu\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(CreateGridBG, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = CreateGridBG;\nexport { CreateGridBG };\nvar _c;\n$RefreshReg$(_c, \"CreateGridBG\");","map":{"version":3,"names":["useEffect","jsxDEV","_jsxDEV","createGrid","paper","view","console","error","log","cellSize","gridSizeX","bounds","width","gridSizeY","height","y","x","Path","Circle","center","Point","radius","fillColor","Color","name","CreateGridBG","paperReady","createMenu","_s","children","onClick","style","position","top","left","zIndex","padding","backgroundColor","color","border","borderRadius","cursor","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mariahjadegardner/UTA/FA24/Research/HackGeo/blockhead/ui/front-end/well-logged/src/interactions/CreateGridBG.jsx"],"sourcesContent":["import { useEffect } from 'react';\n\nconst createGrid = (paper) => {\n    if (!paper || !paper.view) {\n        console.error('Paper.js is not initialized yet.');\n        return;\n    }\n\n    console.log('Creating grid...');\n    const cellSize = 20;\n    const gridSizeX = paper.view.bounds.width;\n    const gridSizeY = paper.view.bounds.height;\n\n    // Loop through grid (size of paper) and place a small dot at each intersection\n    for (let y = 0; y <= gridSizeY; y += cellSize) {\n        for (let x = 0; x <= gridSizeX; x += cellSize) {\n            // Create a circle at each intersection\n            new paper.Path.Circle({\n                center: new paper.Point(x, y),\n                radius: 1.5,\n                fillColor: new paper.Color(0, 0, 0, 0.1),\n                name: 'gridDot',\n            });\n        }\n    }\n};\n\nconst CreateGridBG = ({ paper, paperReady, createMenu }) => {\n    useEffect(() => {\n        if (paperReady && paper) {\n            createGrid(paper);\n        }\n    }, [paperReady, paper]);\n\n    return (\n        <div>\n            {paperReady && (\n                <button\n                    onClick={createMenu}\n                    style={{\n                        position: 'absolute',\n                        top: '10px',\n                        left: '10px',\n                        zIndex: 100,\n                        padding: '10px 20px',\n                        backgroundColor: '#007bff',\n                        color: '#fff',\n                        border: 'none',\n                        borderRadius: '5px',\n                        cursor: 'pointer',\n                    }}\n                >\n                    Create Menu\n                </button>\n            )}\n        </div>\n    );\n};\n\nexport { CreateGridBG };\n\n\n\n\n\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,UAAU,GAAIC,KAAK,IAAK;EAC1B,IAAI,CAACA,KAAK,IAAI,CAACA,KAAK,CAACC,IAAI,EAAE;IACvBC,OAAO,CAACC,KAAK,CAAC,kCAAkC,CAAC;IACjD;EACJ;EAEAD,OAAO,CAACE,GAAG,CAAC,kBAAkB,CAAC;EAC/B,MAAMC,QAAQ,GAAG,EAAE;EACnB,MAAMC,SAAS,GAAGN,KAAK,CAACC,IAAI,CAACM,MAAM,CAACC,KAAK;EACzC,MAAMC,SAAS,GAAGT,KAAK,CAACC,IAAI,CAACM,MAAM,CAACG,MAAM;;EAE1C;EACA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIF,SAAS,EAAEE,CAAC,IAAIN,QAAQ,EAAE;IAC3C,KAAK,IAAIO,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIN,SAAS,EAAEM,CAAC,IAAIP,QAAQ,EAAE;MAC3C;MACA,IAAIL,KAAK,CAACa,IAAI,CAACC,MAAM,CAAC;QAClBC,MAAM,EAAE,IAAIf,KAAK,CAACgB,KAAK,CAACJ,CAAC,EAAED,CAAC,CAAC;QAC7BM,MAAM,EAAE,GAAG;QACXC,SAAS,EAAE,IAAIlB,KAAK,CAACmB,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC;QACxCC,IAAI,EAAE;MACV,CAAC,CAAC;IACN;EACJ;AACJ,CAAC;AAED,MAAMC,YAAY,GAAGA,CAAC;EAAErB,KAAK;EAAEsB,UAAU;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EACxD5B,SAAS,CAAC,MAAM;IACZ,IAAI0B,UAAU,IAAItB,KAAK,EAAE;MACrBD,UAAU,CAACC,KAAK,CAAC;IACrB;EACJ,CAAC,EAAE,CAACsB,UAAU,EAAEtB,KAAK,CAAC,CAAC;EAEvB,oBACIF,OAAA;IAAA2B,QAAA,EACKH,UAAU,iBACPxB,OAAA;MACI4B,OAAO,EAAEH,UAAW;MACpBI,KAAK,EAAE;QACHC,QAAQ,EAAE,UAAU;QACpBC,GAAG,EAAE,MAAM;QACXC,IAAI,EAAE,MAAM;QACZC,MAAM,EAAE,GAAG;QACXC,OAAO,EAAE,WAAW;QACpBC,eAAe,EAAE,SAAS;QAC1BC,KAAK,EAAE,MAAM;QACbC,MAAM,EAAE,MAAM;QACdC,YAAY,EAAE,KAAK;QACnBC,MAAM,EAAE;MACZ,CAAE;MAAAZ,QAAA,EACL;IAED;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EACX;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACjB,EAAA,CA9BIH,YAAY;AAAAqB,EAAA,GAAZrB,YAAY;AAgClB,SAASA,YAAY;AAAG,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}